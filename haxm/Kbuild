KVER ?= $(shell uname -r)
KDIR ?= /lib/modules/$(KVER)/build



MACHINE := $(shell uname -m)
ifeq ($(MACHINE),x86_64)
   NASM_OPTS := -f elf64
else
   NASM_OPTS := -f elf32
endif

HAXM_DIR     := .
HAXM_ASM_SRC := $(wildcard $(HAXM_DIR)/*.asm)
HAXM_ASM_OBJ := $(patsubst $(HAXM_DIR)/%.asm, $(HAXM_DIR)/%.o, $(HAXM_ASM_SRC))
HAXM_ASM_CMD := $(patsubst $(HAXM_DIR)/%.asm, $(HAXM_DIR)/.%.o.cmd, $(HAXM_ASM_SRC))
HAXM_C_SRC   := $(wildcard $(HAXM_DIR)/*.c)
HAXM_C_OBJ   := $(patsubst $(HAXM_DIR)/%.c, $(HAXM_DIR)/%.o, $(HAXM_C_SRC))
HAXM_C_CMD   := $(patsubst $(HAXM_DIR)/%.c, $(HAXM_DIR)/.%.o.cmd, $(HAXM_C_SRC))

%.o: %.asm
	$(eval CMD := $(join $(dir $@), .$(notdir $@).cmd))
	nasm $(NASM_OPTS) -o $@ $^
	echo "" > $(CMD)

modules: $(HAXM_ASM_OBJ)
	$(MAKE) -C $(KDIR) M=$$PWD modules

ccflags-y += -Wno-unused-function -std=gnu99
#obj-m := haxm.o

obj-$(CONFIG_HAXM_CPU)  += haxm.o

# haxm
haxm-y += chunk.o
haxm-y += cpu.o
haxm-y += cpuid.o
haxm-y += dump.o
haxm-y += emulate.o
haxm-y += emulate_ops.o
haxm-y += ept.o
haxm-y += ept2.o
haxm-y += ept_tree.o
haxm-y += gpa_space.o
haxm-y += hax.o
haxm-y += ia32.o
haxm-y += ia32_ops.o
haxm-y += intr_exc.o
haxm-y += memory.o
haxm-y += memslot.o
haxm-y += name.o
haxm-y += page_walker.o
haxm-y += ramblock.o
haxm-y += vcpu.o
haxm-y += vm.o
haxm-y += vmx.o
haxm-y += vmx_ops.o
haxm-y += vtlb.o

# haxm-linux
haxm-y += components.o
haxm-y += hax_entry.o
haxm-y += hax_event.o
haxm-y += hax_host_mem.o
haxm-y += hax_mem_alloc.o
haxm-y += hax_mm.o
haxm-y += hax_wrapper.o
